{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","index","findIndex","tab","id","className","map","i","isSelected","cn","href","onClick","e","preventDefault","title","content","App","useState","selectedTab","setSelectedTab","t","ReactDOM","render","document","getElementById"],"mappings":"kNAcaA,EAAO,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,cAAeC,EAA2B,EAA3BA,cACtCC,EAAQH,EACTI,WAAU,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAI/B,OAFAE,GAAmB,IAAXA,EAAeA,EAAQ,EAG7B,sBAAK,UAAQ,gBAAb,UACE,qBAAKI,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,EAAKI,GACd,IAAMC,EAAaP,IAAUM,EAE7B,OACE,oBAEEF,UAAWI,IAAG,CAAE,YAAaD,IAC7B,UAAQ,MAHV,SAKE,mBACEE,KAAI,WAAMP,EAAIC,IACd,UAAQ,UACRO,QAAS,SAACC,GACRA,EAAEC,iBACGL,GACHR,EAAcG,IANpB,SAUGA,EAAIW,SAdFX,EAAIC,WAsBnB,qBACEA,GAAIL,EACJM,UAAU,QACV,UAAQ,aAHV,SAKGP,EAAKG,GAAOc,cClDRjB,EAAO,CAClB,CAAEM,GAAI,QAASU,MAAO,QAASC,QAAS,eACxC,CAAEX,GAAI,QAASU,MAAO,QAASC,QAAS,eACxC,CAAEX,GAAI,QAASU,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAASnB,EAAK,IAApD,mBAAOoB,EAAP,KAAoBC,EAApB,KAYA,OACE,sBAAKd,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBa,EAAYJ,SAGlC,cAAC,EAAD,CACEhB,KAAMA,EACNC,cAAemB,EAAYd,GAC3BJ,cAnBgB,SAACG,GACrB,IAAMF,EAAQH,EAAKI,WAAU,SAAAkB,GAAC,OAAIA,EAAEhB,KAAOD,EAAIC,MAG7Ce,GADa,IAAXlB,EACaH,EAAK,GAELA,EAAKG,WClB1BoB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.505abd5a.chunk.js","sourcesContent":["import cn from 'classnames';\n\nexport interface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }: Props) => {\n  let index = tabs\n    .findIndex(tab => tab.id === selectedTabId);\n\n  index = index !== -1 ? index : 0;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab, i) => {\n            const isSelected = index === i;\n\n            return (\n              <li\n                key={tab.id}\n                className={cn({ 'is-active': isSelected })}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    if (!isSelected) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div\n        id={selectedTabId}\n        className=\"block\"\n        data-cy=\"TabContent\"\n      >\n        {tabs[index].content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab, Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const onTabSelected = (tab: Tab) => {\n    const index = tabs.findIndex(t => t.id === tab.id);\n\n    if (index === -1) {\n      setSelectedTab(tabs[0]);\n    } else {\n      setSelectedTab(tabs[index]);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}